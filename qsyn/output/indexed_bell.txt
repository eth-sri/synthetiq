Do Gate Operations Normalization
Reducde to 22->22
MAX MODULE NUM is : 5
bool [cirq.CNOT]
phasing [cirq.CZ]
sp [cirq.H]
entangle []
[cirq.CNOT, cirq.CZ, cirq.H]
{}
dict_keys([])
{}
Rule Selection Rotuine
C_RULE_ID ['triple_span', 'span', 'open_and_close_B', 'open_and_close_P', 'open_and_close_NC']
P_RULE_ID ['span', 'open_and_close_B']
NC_RULE_ID ['add']
prior module generating
module_gate_num is 4
prior module gen at level 1 done
prior module gen at level 2 done
prior module gen at level 3 done
prior module gen done
Modular Search state search!
concrete_criterion : False
naive_module_gen : True
**Initial State is**
EMPTY STATE
********************
Initdiffers
[('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})}))]
===================
curr state

EMPTY STATE
curr_targ_differ ('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})}))
check_order : stacked, targ_diff [] ('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})}))
cost (0, 0, 0, 2)
{'|0000⟩': ('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})})), '|0100⟩': ('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})})), '|1000⟩': ('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})})), '|1100⟩': ('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})}))}
** cnt_num_of_passed_module after seeing all modules in pool ** 3
===================
curr state

Moment #0 
	-[ H(2)]
Moment #1 
	-[ CNOT(2, 3)]

curr_targ_differ ('PHASING', None)
check_order : stacked, targ_diff [('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})}))] ('PHASING', None)
cost (1, 2, -1, 0)
Choose Best Count Attribute!
{'|0000⟩': 'IDENTICAL', '|0100⟩': ('PHASING', None), '|1000⟩': ('Bool', None), '|1100⟩': ('PHASING', None)}
['PHASING']
GEN for ('PHASING', None)
GEN DONE 3876
MODULES were  [('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})})), ('PHASING', None)]
================================
Synthesis Result
Benchmark : indexed_bell
Mode : Ours
================================
Synthesized QC
0: ───────────────@───
                  │
1: ───────────@───┼───
              │   │
2: ───H───@───┼───┼───
          │   │   │
3: ───────X───@───X───
Stacked Moduels
[('Entangle', ({frozenset({3}), frozenset({2}), frozenset({1}), frozenset({0})}, {frozenset({1}), frozenset({2, 3}), frozenset({0})})), ('PHASING', None)]
Elapsed Time :  2.63
