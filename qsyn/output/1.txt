Do Gate Operations Normalization
Reducde to 12->11
MAX MODULE NUM is : 5
bool []
phasing [cirq.S, (cirq.S**-1), cirq.T, (cirq.T**-1)]
sp [cirq.H]
entangle [cirq.MatrixGate(np.array([[(-0.35355339059327373+0.3535533905932738j), (0.3535533905932738+0.35355339059327373j), (0.3535533905932738+0.35355339059327373j), (0.35355339059327373-0.3535533905932738j)], [(0.3535533905932738-0.35355339059327373j), (0.35355339059327373+0.3535533905932738j), (-0.35355339059327373-0.3535533905932738j), (0.3535533905932738-0.35355339059327373j)], [(0.3535533905932738-0.35355339059327373j), (-0.35355339059327373-0.3535533905932738j), (0.35355339059327373+0.3535533905932738j), (0.3535533905932738-0.35355339059327373j)], [(0.35355339059327373-0.3535533905932738j), (0.3535533905932738+0.35355339059327373j), (0.3535533905932738+0.35355339059327373j), (-0.35355339059327373+0.3535533905932738j)]], dtype=np.complex128))]
[cirq.H]
{cirq.S: 8, (cirq.S**-1): 8, cirq.T: 8, (cirq.T**-1): 8, cirq.MatrixGate(np.array([[(-0.35355339059327373+0.3535533905932738j), (0.3535533905932738+0.35355339059327373j), (0.3535533905932738+0.35355339059327373j), (0.35355339059327373-0.3535533905932738j)], [(0.3535533905932738-0.35355339059327373j), (0.35355339059327373+0.3535533905932738j), (-0.35355339059327373-0.3535533905932738j), (0.3535533905932738-0.35355339059327373j)], [(0.3535533905932738-0.35355339059327373j), (-0.35355339059327373-0.3535533905932738j), (0.35355339059327373+0.3535533905932738j), (0.3535533905932738-0.35355339059327373j)], [(0.35355339059327373-0.3535533905932738j), (0.3535533905932738+0.35355339059327373j), (0.3535533905932738+0.35355339059327373j), (-0.35355339059327373+0.3535533905932738j)]], dtype=np.complex128)): 8}
dict_keys([cirq.S, (cirq.S**-1), cirq.T, (cirq.T**-1), cirq.MatrixGate(np.array([[(-0.35355339059327373+0.3535533905932738j), (0.3535533905932738+0.35355339059327373j), (0.3535533905932738+0.35355339059327373j), (0.35355339059327373-0.3535533905932738j)], [(0.3535533905932738-0.35355339059327373j), (0.35355339059327373+0.3535533905932738j), (-0.35355339059327373-0.3535533905932738j), (0.3535533905932738-0.35355339059327373j)], [(0.3535533905932738-0.35355339059327373j), (-0.35355339059327373-0.3535533905932738j), (0.35355339059327373+0.3535533905932738j), (0.3535533905932738-0.35355339059327373j)], [(0.35355339059327373-0.3535533905932738j), (0.3535533905932738+0.35355339059327373j), (0.3535533905932738+0.35355339059327373j), (-0.35355339059327373+0.3535533905932738j)]], dtype=np.complex128))])
{cirq.S: (cirq.S**-1), (cirq.S**-1): cirq.S, cirq.T: (cirq.T**-1), (cirq.T**-1): cirq.T}
Rule Selection Rotuine
C_RULE_ID ['triple_span', 'span', 'open_and_close_B', 'open_and_close_P', 'open_and_close_NC']
P_RULE_ID ['span', 'open_and_close_B']
NC_RULE_ID ['add']
prior module generating
module_gate_num is 2
prior module gen at level 1 done
prior module gen at level 2 done
prior module gen at level 3 done
prior module gen done
Modular Search state search!
concrete_criterion : False
naive_module_gen : True
**Initial State is**
EMPTY STATE
********************
Initdiffers
[('Bool', {1})]
===================
curr state

EMPTY STATE
curr_targ_differ ('Bool', {1})
check_order : stacked, targ_diff [] ('Bool', {1})
cost (0, 0, 0, 0)
Choose Best Count Attribute!
{'|00⟩': 'IDENTICAL', '|01⟩': 'IDENTICAL', '|10⟩': ('Bool', {1}), '|11⟩': ('Bool', {1})}
['Bool']
GEN for ('Bool', {1})
GEN DONE 1
** cnt_num_of_passed_module after seeing all modules in pool ** 0
Not Found. State Search is Over.
================================
Synthesis Result
Benchmark : 1
Mode : Ours
================================
None Found
